name: CI build

on:
  push:
    branches:
      - main
      - v[0-9]+
      - v[0-9]+.[0-9]+
      - cryostat-v[0-9]+.[0-9]+
  pull_request:
    branches:
      - main
      - v[0-9]+
      - v[0-9]+.[0-9]+
      - cryostat-v[0-9]+.[0-9]+

jobs:
  build-core:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    - uses: actions/setup-java@v3
      with:
        java-version: '17'
        distribution: 'temurin'
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: restore
    - run: mvn -B -U clean verify
    - uses: actions/upload-artifact@v3
      with:
        name: cryostat-core
        path: /home/runner/work/cryostat-core/cryostat-core/target/cryostat-core-2.24.0-SNAPSHOT.jar
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: save

  build-cryostat:
    needs: [build-core]
    strategy:
      matrix:
        arch: [amd64, arm64]
    uses: ./.github/workflows/cryostat-build.yml
    with:
      build-arch: ${{ matrix.arch }}
      skip-itests: ${{ matrix.arch != 'amd64' }}
  
  push-to-ghcr:
    runs-on: ubuntu-latest
    needs: [build-core]
    strategy:
      matrix:
        arch: [amd64, arm64]
    outputs: 
      amd64_image: ${{ steps.amd64_image.outputs.image }}
      arm64_image: ${{ steps.arm64_image.outputs.image }}
    permissions:
      packages: write
    steps:
    - uses: actions/download-artifact@v3
      with:
        name: cryostat-${{ matrix.arch }}
    - name: Load cryostat image
      run: podman load -i cryostat-${{ matrix.arch }}.tar
    - name: Tag cryostat image
      run: podman tag cryostat ghcr.io/${{ github.repository_owner }}/cryostat-core:pr-${{ github.event.number }}-${{ github.event.pull_request.head.sha }}-linux-${{ matrix.arch }}
    - name: Push PR test image to ghcr.io
      id: push-to-ghcr
      uses: redhat-actions/push-to-registry@v2
      with:
        image: cryostat
        tags: pr-${{ github.event.number }}-${{ github.event.pull_request.head.sha }}-linux-${{ matrix.arch }}
        registry: ghcr.io/${{ github.repository_owner }}
        username: ${{ github.event.pull_request.user.login }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Store images as output amd64
      if: ${{ matrix.arch == 'amd64' }}
      id: amd64_image
      run: echo "image=${{ steps.push-to-ghcr.outputs.registry-path }}" >> "$GITHUB_OUTPUT"
    - name: Store images as output
      if: ${{ matrix.arch == 'arm64' }}
      id: arm64_image
      run: echo "image=${{ steps.push-to-ghcr.outputs.registry-path }}" >> "$GITHUB_OUTPUT"

  cryostat-test:
    runs-on: ubuntu-latest
    steps:
    - name: Install xpath
      run: |
        sudo apt-get update
        sudo apt-get install -y libxml-xpath-perl
    - uses: actions/checkout@v4
      with:
        repository: ${{ github.repository_owner }}
        ref: main
        submodules: true
        fetch-depth: 0
    - uses: actions/setup-java@v3
      with:
        java-version: '17' 02W
        distribution: 'temurin'
    - name: Pull cryostat image
      run: podman pull ghcr.io/${{ github.repository_owner }}/cryostat-core:pr-${{ github.event.number }}-${{ github.event.pull_request.head.sha }}-linux-${{ matrix.arch }}
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: restore
    - name: Run integration tests
      run: POD_NAME=cryostat-itests CONTAINER_NAME=cryostat-itest ITEST_IMG_VERSION=latest bash repeated-integration-tests.bash
    - name: Print itest logs
      if: failure()
      run: ls -1dt target/cryostat-itest-*.log | head -n1 | xargs cat
    - name: Print itest container logs
      if: failure()
      run: ls -1dt target/cryostat-*.server.log | head -n1 | xargs cat
    - uses: skjolber/maven-cache-github-action@v1
      with:
        step: save

  comment-image:
    runs-on: ubuntu-latest
    needs: [push-to-ghcr]
    env:
      amd64_image: ${{ needs.push-to-ghcr.outputs.amd64_image }}
      arm64_image: ${{ needs.push-to-ghcr.outputs.arm64_image }}
    permissions:
      pull-requests: write
    steps:
    - name: Create markdown table
      id: md-table
      uses: petems/csv-to-md-table-action@v3.0.0
      with: 
        csvinput: |
          ARCH, IMAGE
          amd64, ${{ env.amd64_image }}
          arm64, ${{ env.arm64_image }}
    - uses: thollander/actions-comment-pull-request@v2
      with:
        message: |-
          ${{ steps.md-table.outputs.markdown-table }}

          To run smoketest:
          ```
          # amd64          
          CRYOSTAT_IMAGE=${{ env.amd64_image }} sh smoketest.sh

          # or arm64
          CRYOSTAT_IMAGE=${{ env.arm64_image }} sh smoketest.sh
          ```
